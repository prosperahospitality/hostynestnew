import React from "react";

export const Logo = ({
	size,
	width,
	height,
	...props
}) => (
	<svg
		fill="none"
		height={size || height}
		viewBox="0 0 2000 2000"
		width={size || width}
		{...props}
	>
	<path d="M991.345 720.191L572.463 1145.36C651.711 1170.37 837.881 1209.91 948.577 1168C1400.16 1056.05 1295.76 625.846 1143.55 503.83C1045.44 410.743 936.417 467.352 889.455 512.636C855.24 503.579 768.696 537.375 729.701 555.405C875.618 566.475 964.929 669.874 991.345 720.191Z" fill="#0374FA"/>
  <path d="M1056.76 721.448L641.648 1131.53C762.407 1229.64 1154.87 1189.39 1084.43 769.249C1058.43 700.483 966.691 560.939 807.692 552.889C824.883 534.859 876.625 501.566 946.062 512.636C985.895 468.19 1086.19 401.94 1193.87 487.478C1377.52 608.237 1455.51 1044.73 1022.79 1160.46" stroke="#044B4E" stroke-width="7.65594"/>
  <path d="M1867.52 709.811C1579.73 1649.93 414.175 1789.03 265.482 858.503" stroke="#044B4E" stroke-width="5.83858" stroke-linecap="round"/>
  <path d="M1685.3 820.131C1671.19 841.236 1656.01 862.899 1639.84 884.897M236.703 1046.81C715.534 1802.17 1343.77 1287.62 1639.84 884.897M301.445 1305.87C611.03 1519.06 1312.13 1733.33 1639.84 884.897M1685.3 925.375C1642.14 1297.78 1329.22 1895.24 422.836 1305.87M1944.27 1127.77C1639.44 1322.06 884.121 1621.61 301.445 1265.4" stroke="#044B4E" stroke-width="5.83858" stroke-linecap="round"/>
  <path d="M54.4336 1194.11C105.843 1158.25 220.025 1111.37 265.481 1210.65C187.556 1309.94 92.3139 1240.99 54.4336 1194.11Z" fill="#0374FA"/>
  <path d="M199.995 765.488C245.355 808.109 314.749 909.667 229.445 974.933C117.663 919.791 163.236 812.327 199.995 765.488Z" fill="#0374FA"/>
  <path d="M1856.97 1004.39C1854.52 1066.59 1823.34 1185.57 1718.13 1163.95C1686.48 1043.39 1797.5 1007.35 1856.97 1004.39Z" fill="#0374FA"/>
  </svg>
);


export const FullLogo = ({
	size,
	width,
	height,
	...props
}) => (
	<svg
		fill="none"
		height={size || height}
		viewBox="0 0 3283 682"
		width={size || width}
		{...props}
	>
		<g clip-path="url(#clip0_518_267)">
<path d="M1387.68 498.762C1380.54 498.762 1375.02 496.806 1371.11 492.893C1367.42 488.75 1365.58 483.111 1365.58 475.976V272.631C1365.58 265.266 1367.42 259.627 1371.11 255.714C1375.02 251.802 1380.54 249.845 1387.68 249.845C1394.81 249.845 1400.22 251.802 1403.9 255.714C1407.82 259.627 1409.77 265.266 1409.77 272.631V354.107H1535.1V272.631C1535.1 265.266 1536.94 259.627 1540.62 255.714C1544.53 251.802 1550.06 249.845 1557.19 249.845C1564.33 249.845 1569.73 251.802 1573.42 255.714C1577.33 259.627 1579.29 265.266 1579.29 272.631V475.976C1579.29 483.111 1577.33 488.75 1573.42 492.893C1569.73 496.806 1564.33 498.762 1557.19 498.762C1550.06 498.762 1544.53 496.806 1540.62 492.893C1536.94 488.75 1535.1 483.111 1535.1 475.976V391.048H1409.77V475.976C1409.77 483.111 1407.93 488.75 1404.25 492.893C1400.57 496.806 1395.04 498.762 1387.68 498.762ZM1736.52 499.452C1719.03 499.452 1703.84 495.885 1690.95 488.75C1678.06 481.615 1668.05 471.488 1660.91 458.369C1653.78 445.02 1650.21 429.369 1650.21 411.417C1650.21 397.837 1652.17 385.754 1656.08 375.167C1660.22 364.349 1666.09 355.143 1673.69 347.548C1681.28 339.722 1690.37 333.853 1700.96 329.941C1711.55 325.798 1723.4 323.726 1736.52 323.726C1754.01 323.726 1769.2 327.294 1782.09 334.429C1794.98 341.564 1804.99 351.691 1812.13 364.81C1819.26 377.929 1822.83 393.464 1822.83 411.417C1822.83 424.996 1820.76 437.194 1816.61 448.012C1812.7 458.829 1806.95 468.151 1799.35 475.976C1791.76 483.571 1782.67 489.44 1772.08 493.583C1761.49 497.496 1749.64 499.452 1736.52 499.452ZM1736.52 466.655C1745.04 466.655 1752.52 464.583 1758.96 460.441C1765.4 456.298 1770.35 450.198 1773.81 442.143C1777.49 433.857 1779.33 423.615 1779.33 411.417C1779.33 393.004 1775.42 379.31 1767.59 370.333C1759.77 361.127 1749.41 356.524 1736.52 356.524C1728 356.524 1720.52 358.595 1714.08 362.738C1707.63 366.651 1702.57 372.75 1698.89 381.036C1695.44 389.091 1693.71 399.218 1693.71 411.417C1693.71 429.599 1697.62 443.409 1705.45 452.845C1713.27 462.052 1723.63 466.655 1736.52 466.655ZM1951.32 499.452C1941.42 499.452 1930.95 498.417 1919.9 496.345C1908.85 494.274 1898.96 490.706 1890.21 485.643C1886.53 483.341 1883.88 480.694 1882.27 477.702C1880.89 474.48 1880.31 471.373 1880.54 468.381C1881 465.159 1882.15 462.397 1884 460.095C1886.07 457.794 1888.6 456.298 1891.59 455.607C1894.81 454.917 1898.27 455.492 1901.95 457.333C1911.15 461.706 1919.79 464.814 1927.84 466.655C1935.9 468.266 1943.84 469.071 1951.66 469.071C1962.71 469.071 1970.88 467.23 1976.17 463.548C1981.7 459.635 1984.46 454.571 1984.46 448.357C1984.46 443.064 1982.62 439.036 1978.94 436.274C1975.48 433.282 1970.19 431.095 1963.06 429.714L1928.53 423.155C1914.26 420.393 1903.33 415.214 1895.73 407.619C1888.37 399.794 1884.69 389.782 1884.69 377.583C1884.69 366.536 1887.68 356.984 1893.66 348.929C1899.88 340.873 1908.39 334.659 1919.21 330.286C1930.03 325.913 1942.46 323.726 1956.5 323.726C1966.62 323.726 1976.06 324.877 1984.81 327.179C1993.78 329.25 2002.41 332.587 2010.7 337.191C2014.15 339.032 2016.45 341.449 2017.6 344.441C2018.98 347.433 2019.33 350.54 2018.64 353.762C2017.95 356.754 2016.57 359.516 2014.5 362.048C2012.42 364.349 2009.78 365.845 2006.56 366.536C2003.56 366.996 2000.11 366.306 1996.2 364.464C1989.06 360.782 1982.16 358.135 1975.48 356.524C1969.04 354.913 1962.82 354.107 1956.84 354.107C1945.56 354.107 1937.16 356.064 1931.64 359.976C1926.34 363.889 1923.7 369.068 1923.7 375.512C1923.7 380.345 1925.31 384.373 1928.53 387.595C1931.75 390.818 1936.7 393.004 1943.38 394.155L1977.9 400.714C1992.86 403.476 2004.14 408.54 2011.73 415.905C2019.56 423.27 2023.47 433.167 2023.47 445.595C2023.47 462.397 2016.91 475.631 2003.79 485.298C1990.67 494.734 1973.18 499.452 1951.32 499.452ZM2164.81 499.452C2149.85 499.452 2137.31 496.921 2127.18 491.857C2117.28 486.794 2109.92 479.429 2105.09 469.762C2100.25 459.865 2097.84 447.667 2097.84 433.167V359.631H2079.88C2074.36 359.631 2070.1 358.25 2067.11 355.488C2064.12 352.496 2062.62 348.468 2062.62 343.405C2062.62 338.111 2064.12 334.083 2067.11 331.322C2070.1 328.56 2074.36 327.179 2079.88 327.179H2097.84V295.762C2097.84 288.627 2099.68 283.218 2103.36 279.536C2107.27 275.853 2112.68 274.012 2119.59 274.012C2126.49 274.012 2131.78 275.853 2135.47 279.536C2139.15 283.218 2140.99 288.627 2140.99 295.762V327.179H2177.59C2183.11 327.179 2187.37 328.56 2190.36 331.322C2193.35 334.083 2194.85 338.111 2194.85 343.405C2194.85 348.468 2193.35 352.496 2190.36 355.488C2187.37 358.25 2183.11 359.631 2177.59 359.631H2140.99V430.75C2140.99 441.798 2143.41 450.083 2148.24 455.607C2153.07 461.131 2160.9 463.893 2171.72 463.893C2175.63 463.893 2179.08 463.548 2182.07 462.857C2185.07 462.167 2187.71 461.706 2190.01 461.476C2192.78 461.246 2195.08 462.167 2196.92 464.238C2198.76 466.079 2199.68 469.992 2199.68 475.976C2199.68 480.579 2198.87 484.722 2197.26 488.405C2195.88 491.857 2193.24 494.274 2189.32 495.655C2186.33 496.575 2182.42 497.381 2177.59 498.071C2172.75 498.992 2168.49 499.452 2164.81 499.452ZM2296.55 560.905C2291.49 560.905 2287.35 559.524 2284.13 556.762C2280.9 554.23 2278.95 550.778 2278.26 546.405C2277.8 542.032 2278.6 537.429 2280.67 532.595L2304.15 480.464V498.417L2241.32 353.072C2239.25 348.008 2238.55 343.29 2239.25 338.917C2239.94 334.544 2242.01 331.091 2245.46 328.56C2249.14 325.798 2254.09 324.417 2260.3 324.417C2265.6 324.417 2269.86 325.683 2273.08 328.214C2276.3 330.516 2279.18 335.004 2281.71 341.679L2328.32 458.024H2317.96L2365.6 341.333C2368.13 334.889 2371.13 330.516 2374.58 328.214C2378.03 325.683 2382.63 324.417 2388.39 324.417C2393.45 324.417 2397.48 325.798 2400.47 328.56C2403.46 331.091 2405.3 334.544 2406 338.917C2406.69 343.06 2405.88 347.663 2403.58 352.726L2319.69 544.333C2316.69 550.778 2313.47 555.151 2310.02 557.452C2306.57 559.754 2302.08 560.905 2296.55 560.905Z" fill="#2E2E2E"/>
<path d="M2491.4 498.762C2484.72 498.762 2479.54 496.921 2475.86 493.238C2472.41 489.556 2470.68 484.262 2470.68 477.357V271.941C2470.68 264.806 2472.41 259.397 2475.86 255.714C2479.54 251.802 2484.26 249.845 2490.01 249.845C2495.31 249.845 2499.22 250.881 2501.75 252.953C2504.51 254.794 2507.74 258.016 2511.42 262.619L2643.65 434.202H2634.67V270.905C2634.67 264.23 2636.4 259.052 2639.85 255.369C2643.53 251.687 2648.71 249.845 2655.38 249.845C2662.06 249.845 2667.12 251.687 2670.57 255.369C2674.03 259.052 2675.75 264.23 2675.75 270.905V478.048C2675.75 484.492 2674.14 489.556 2670.92 493.238C2667.7 496.921 2663.32 498.762 2657.8 498.762C2652.51 498.762 2648.25 497.726 2645.03 495.655C2642.03 493.583 2638.7 490.246 2635.01 485.643L2503.13 314.06H2511.76V477.357C2511.76 484.262 2510.04 489.556 2506.59 493.238C2503.13 496.921 2498.07 498.762 2491.4 498.762ZM2839.07 499.452C2819.96 499.452 2803.51 495.885 2789.7 488.75C2775.89 481.615 2765.19 471.488 2757.59 458.369C2750.23 445.25 2746.54 429.714 2746.54 411.762C2746.54 394.27 2750.11 378.964 2757.24 365.845C2764.61 352.726 2774.62 342.484 2787.28 335.119C2800.17 327.524 2814.78 323.726 2831.13 323.726C2843.09 323.726 2853.8 325.683 2863.23 329.595C2872.9 333.508 2881.07 339.147 2887.74 346.512C2894.65 353.877 2899.83 362.853 2903.28 373.441C2906.96 383.798 2908.8 395.536 2908.8 408.655C2908.8 412.798 2907.31 416.02 2904.32 418.321C2901.55 420.393 2897.53 421.429 2892.23 421.429H2781.41V396.572H2878.42L2872.9 401.75C2872.9 391.163 2871.29 382.302 2868.07 375.167C2865.07 368.032 2860.59 362.623 2854.6 358.941C2848.85 355.028 2841.6 353.072 2832.85 353.072C2823.19 353.072 2814.9 355.373 2807.99 359.976C2801.32 364.349 2796.14 370.679 2792.46 378.964C2789.01 387.02 2787.28 396.687 2787.28 407.964V410.381C2787.28 429.254 2791.65 443.409 2800.4 452.845C2809.38 462.052 2822.49 466.655 2839.76 466.655C2845.74 466.655 2852.42 465.964 2859.78 464.583C2867.38 462.972 2874.51 460.325 2881.19 456.643C2886.02 453.881 2890.28 452.73 2893.96 453.191C2897.64 453.421 2900.52 454.687 2902.59 456.988C2904.89 459.29 2906.27 462.167 2906.73 465.619C2907.19 468.841 2906.5 472.179 2904.66 475.631C2903.05 479.083 2900.17 482.075 2896.03 484.607C2887.98 489.671 2878.65 493.468 2868.07 496C2857.71 498.302 2848.04 499.452 2839.07 499.452ZM3035.85 499.452C3025.95 499.452 3015.48 498.417 3004.43 496.345C2993.38 494.274 2983.49 490.706 2974.74 485.643C2971.06 483.341 2968.41 480.694 2966.8 477.702C2965.42 474.48 2964.85 471.373 2965.08 468.381C2965.54 465.159 2966.69 462.397 2968.53 460.095C2970.6 457.794 2973.13 456.298 2976.12 455.607C2979.35 454.917 2982.8 455.492 2986.48 457.333C2995.69 461.706 3004.32 464.814 3012.37 466.655C3020.43 468.266 3028.37 469.071 3036.19 469.071C3047.24 469.071 3055.41 467.23 3060.71 463.548C3066.23 459.635 3068.99 454.571 3068.99 448.357C3068.99 443.064 3067.15 439.036 3063.47 436.274C3060.02 433.282 3054.72 431.095 3047.59 429.714L3013.06 423.155C2998.79 420.393 2987.86 415.214 2980.27 407.619C2972.9 399.794 2969.22 389.782 2969.22 377.583C2969.22 366.536 2972.21 356.984 2978.19 348.929C2984.41 340.873 2992.92 334.659 3003.74 330.286C3014.56 325.913 3026.99 323.726 3041.03 323.726C3051.15 323.726 3060.59 324.877 3069.34 327.179C3078.31 329.25 3086.94 332.587 3095.23 337.191C3098.68 339.032 3100.98 341.449 3102.13 344.441C3103.52 347.433 3103.86 350.54 3103.17 353.762C3102.48 356.754 3101.1 359.516 3099.03 362.048C3096.96 364.349 3094.31 365.845 3091.09 366.536C3088.1 366.996 3084.64 366.306 3080.73 364.464C3073.6 360.782 3066.69 358.135 3060.02 356.524C3053.57 354.913 3047.36 354.107 3041.37 354.107C3030.1 354.107 3021.69 356.064 3016.17 359.976C3010.88 363.889 3008.23 369.068 3008.23 375.512C3008.23 380.345 3009.84 384.373 3013.06 387.595C3016.29 390.818 3021.23 393.004 3027.91 394.155L3062.43 400.714C3077.39 403.476 3088.67 408.54 3096.27 415.905C3104.09 423.27 3108 433.167 3108 445.595C3108 462.397 3101.44 475.631 3088.33 485.298C3075.21 494.734 3057.71 499.452 3035.85 499.452ZM3249.34 499.452C3234.38 499.452 3221.84 496.921 3211.71 491.857C3201.82 486.794 3194.45 479.429 3189.62 469.762C3184.78 459.865 3182.37 447.667 3182.37 433.167V359.631H3164.42C3158.89 359.631 3154.63 358.25 3151.64 355.488C3148.65 352.496 3147.15 348.468 3147.15 343.405C3147.15 338.111 3148.65 334.083 3151.64 331.322C3154.63 328.56 3158.89 327.179 3164.42 327.179H3182.37V295.762C3182.37 288.627 3184.21 283.218 3187.89 279.536C3191.8 275.853 3197.21 274.012 3204.12 274.012C3211.02 274.012 3216.32 275.853 3220 279.536C3223.68 283.218 3225.52 288.627 3225.52 295.762V327.179H3262.12C3267.64 327.179 3271.9 328.56 3274.89 331.322C3277.88 334.083 3279.38 338.111 3279.38 343.405C3279.38 348.468 3277.88 352.496 3274.89 355.488C3271.9 358.25 3267.64 359.631 3262.12 359.631H3225.52V430.75C3225.52 441.798 3227.94 450.083 3232.77 455.607C3237.61 461.131 3245.43 463.893 3256.25 463.893C3260.16 463.893 3263.61 463.548 3266.61 462.857C3269.6 462.167 3272.24 461.706 3274.55 461.476C3277.31 461.246 3279.61 462.167 3281.45 464.238C3283.29 466.079 3284.21 469.992 3284.21 475.976C3284.21 480.579 3283.41 484.722 3281.8 488.405C3280.42 491.857 3277.77 494.274 3273.86 495.655C3270.86 496.575 3266.95 497.381 3262.12 498.071C3257.28 498.992 3253.03 499.452 3249.34 499.452Z" fill="#0374FA"/>
<path d="M570.171 166.88L315.229 425.651C363.461 440.872 476.769 464.938 544.141 439.431C818.989 371.293 755.445 109.46 662.808 35.1972C603.092 -21.4576 536.74 12.9958 508.158 40.5572C487.334 35.0449 434.661 55.6139 410.928 66.5874C499.737 73.3246 554.094 136.256 570.171 166.88Z" fill="#0374FA"/>
<path d="M609.982 167.645L357.336 417.228C430.833 476.945 669.698 452.446 626.825 196.737C611.003 154.885 555.165 69.9551 458.394 65.0553C468.857 54.0817 500.349 33.819 542.61 40.5563C566.853 13.5053 627.897 -26.8158 693.432 25.2445C805.208 98.7414 852.675 364.402 589.311 434.837" stroke="#044B4E" stroke-opacity="0.8" stroke-width="7.65594"/>
<path d="M1103.44 160.562C928.278 732.742 218.891 817.402 128.393 251.06" stroke="#044B4E" stroke-opacity="0.8" stroke-width="5.83858" stroke-linecap="round"/>
<path d="M992.53 227.706C983.942 240.551 974.702 253.736 964.86 267.124M110.877 365.669C402.306 825.4 784.665 512.229 964.86 267.124M150.28 523.341C338.702 653.093 765.408 783.501 964.86 267.124M992.53 291.76C966.261 518.414 775.811 882.046 224.162 523.341M1150.14 414.942C964.619 533.196 504.912 715.505 150.28 498.705" stroke="#044B4E" stroke-opacity="0.8" stroke-width="5.83858" stroke-linecap="round"/>
<path d="M-0.0566406 455.316C31.2322 433.495 100.726 404.96 128.392 465.387C80.9649 525.814 22.9983 483.851 -0.0566406 455.316Z" fill="#0374FA"/>
<path d="M88.5353 194.449C116.143 220.389 158.378 282.2 106.46 321.923C38.4263 288.362 66.1628 222.956 88.5353 194.449Z" fill="#0374FA"/>
<path d="M1097.01 339.851C1095.53 377.704 1076.55 450.121 1012.51 436.962C993.248 363.588 1060.82 341.649 1097.01 339.851Z" fill="#0374FA"/>
</g>
<defs>
<clipPath id="clip0_518_267">
<rect width="3283" height="682" fill="white"/>
</clipPath>
</defs>
</svg>
);


export const NextUILogo = (props) => {
  const { width, height = 40 } = props;
  return (
    <svg
      fill="none"
      height={height}
      viewBox="0 0 161 32"
      width={width}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        className="fill-black dark:fill-white"
        d="M55.6827 5V26.6275H53.7794L41.1235 8.51665H40.9563V26.6275H39V5H40.89L53.5911 23.1323H53.7555V5H55.6827ZM67.4831 26.9663C66.1109 27.0019 64.7581 26.6329 63.5903 25.9044C62.4852 25.185 61.6054 24.1633 61.0537 22.9582C60.4354 21.5961 60.1298 20.1106 60.1598 18.6126C60.132 17.1113 60.4375 15.6228 61.0537 14.2563C61.5954 13.0511 62.4525 12.0179 63.5326 11.268C64.6166 10.5379 65.8958 10.16 67.1986 10.1852C68.0611 10.1837 68.9162 10.3468 69.7187 10.666C70.5398 10.9946 71.2829 11.4948 71.8992 12.1337C72.5764 12.8435 73.0985 13.6889 73.4318 14.6152C73.8311 15.7483 74.0226 16.9455 73.9968 18.1479V19.0773H63.2262V17.4194H72.0935C72.1083 16.4456 71.8952 15.4821 71.4714 14.6072C71.083 13.803 70.4874 13.1191 69.7472 12.6272C68.9887 12.1348 68.1022 11.8812 67.2006 11.8987C66.2411 11.8807 65.3005 12.1689 64.5128 12.7223C63.7332 13.2783 63.1083 14.0275 62.6984 14.8978C62.2582 15.8199 62.0314 16.831 62.0352 17.8546V18.8476C62.009 20.0078 62.2354 21.1595 62.6984 22.2217C63.1005 23.1349 63.7564 23.9108 64.5864 24.4554C65.4554 24.9973 66.4621 25.2717 67.4831 25.2448C68.1676 25.2588 68.848 25.1368 69.4859 24.8859C70.0301 24.6666 70.5242 24.3376 70.9382 23.919C71.3183 23.5345 71.6217 23.0799 71.8322 22.5799L73.5995 23.1604C73.3388 23.8697 72.9304 24.5143 72.4019 25.0506C71.8132 25.6529 71.1086 26.1269 70.3314 26.4434C69.4258 26.8068 68.4575 26.9846 67.4831 26.9663V26.9663ZM78.8233 10.4075L82.9655 17.325L87.1076 10.4075H89.2683L84.1008 18.5175L89.2683 26.6275H87.103L82.9608 19.9317L78.8193 26.6275H76.6647L81.7711 18.5169L76.6647 10.4062L78.8233 10.4075ZM99.5142 10.4075V12.0447H91.8413V10.4075H99.5142ZM94.2427 6.52397H96.1148V22.3931C96.086 22.9446 96.2051 23.4938 96.4597 23.9827C96.6652 24.344 96.9805 24.629 97.3589 24.7955C97.7328 24.9548 98.1349 25.0357 98.5407 25.0332C98.7508 25.0359 98.9607 25.02 99.168 24.9857C99.3422 24.954 99.4956 24.9205 99.6283 24.8853L100.026 26.5853C99.8062 26.6672 99.5805 26.7327 99.3511 26.7815C99.0274 26.847 98.6977 26.8771 98.3676 26.8712C97.6854 26.871 97.0119 26.7156 96.3973 26.4166C95.7683 26.1156 95.2317 25.6485 94.8442 25.0647C94.4214 24.4018 94.2097 23.6242 94.2374 22.8363L94.2427 6.52397ZM118.398 5H120.354V19.3204C120.376 20.7052 120.022 22.0697 119.328 23.2649C118.644 24.4235 117.658 25.3698 116.477 26.0001C115.168 26.6879 113.708 27.0311 112.232 26.9978C110.759 27.029 109.302 26.6835 107.996 25.9934C106.815 25.362 105.827 24.4161 105.141 23.2582C104.447 22.0651 104.092 20.7022 104.115 19.319V5H106.08V19.1831C106.061 20.2559 106.324 21.3147 106.843 22.2511C107.349 23.1459 108.094 23.8795 108.992 24.3683C109.993 24.9011 111.111 25.1664 112.242 25.139C113.373 25.1656 114.493 24.9003 115.495 24.3683C116.395 23.8815 117.14 23.1475 117.644 22.2511C118.16 21.3136 118.421 20.2553 118.402 19.1831L118.398 5ZM128 5V26.6275H126.041V5H128Z"
      />
      <path
        className="fill-black dark:fill-white"
        d="M23.5294 0H8.47059C3.79241 0 0 3.79241 0 8.47059V23.5294C0 28.2076 3.79241 32 8.47059 32H23.5294C28.2076 32 32 28.2076 32 23.5294V8.47059C32 3.79241 28.2076 0 23.5294 0Z"
      />
      <path
        className="fill-white dark:fill-black"
        d="M17.5667 9.21729H18.8111V18.2403C18.8255 19.1128 18.6 19.9726 18.159 20.7256C17.7241 21.4555 17.0968 22.0518 16.3458 22.4491C15.5717 22.8683 14.6722 23.0779 13.6473 23.0779C12.627 23.0779 11.7286 22.8672 10.9521 22.4457C10.2007 22.0478 9.5727 21.4518 9.13602 20.7223C8.6948 19.9705 8.4692 19.1118 8.48396 18.2403V9.21729H9.72854V18.1538C9.71656 18.8298 9.88417 19.4968 10.2143 20.0868C10.5362 20.6506 11.0099 21.1129 11.5814 21.421C12.1689 21.7448 12.8576 21.9067 13.6475 21.9067C14.4374 21.9067 15.1272 21.7448 15.7169 21.421C16.2895 21.1142 16.7635 20.6516 17.0844 20.0868C17.4124 19.4961 17.5788 18.8293 17.5667 18.1538V9.21729ZM23.6753 9.21729V22.845H22.4309V9.21729H23.6753Z"
      />
    </svg>
  );
};



// ####Social Media Icons

export const FacebookIcon = ({
  size, height, width, ...props
}) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg"
    height={height}
    width={width}
    fill="#3c5a9a"
    viewBox="0 0 256 256"
    {...props}
    >
    <path d="M232,128a104.16,104.16,0,0,1-91.55,103.26,4,4,0,0,1-4.45-4V152h24a8,8,0,0,0,8-8.53,8.17,8.17,0,0,0-8.25-7.47H136V112a16,16,0,0,1,16-16h16a8,8,0,0,0,8-8.53A8.17,8.17,0,0,0,167.73,80H152a32,32,0,0,0-32,32v24H96a8,8,0,0,0-8,8.53A8.17,8.17,0,0,0,96.27,152H120v75.28a4,4,0,0,1-4.44,4A104.15,104.15,0,0,1,24.07,124.09c2-54,45.74-97.9,99.78-100A104.12,104.12,0,0,1,232,128Z">   
    </path>
    </svg>
  );
};


export const TwitterIcon = ({
  size, height, width, ...props
}) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg"
    height={height}
    width={width}
    fill="#000"
    viewBox="0 0 24 24"
    {...props}
    >
    <g>
    <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z">
    </path>
    </g>
    </svg>
  );
};

export const LinkedinIcon = ({
  size, height, width, ...props
}) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg"
    height={height}
    width={width}
    fill="#007ebb"
    viewBox="0 0 256 256"
    {...props}
    >
    <path d="M216,24H40A16,16,0,0,0,24,40V216a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V40A16,16,0,0,0,216,24ZM96,176a8,8,0,0,1-16,0V112a8,8,0,0,1,16,0ZM88,96a12,12,0,1,1,12-12A12,12,0,0,1,88,96Zm96,80a8,8,0,0,1-16,0V140a20,20,0,0,0-40,0v36a8,8,0,0,1-16,0V112a8,8,0,0,1,15.79-1.78A36,36,0,0,1,184,140Z">
    </path>
    </svg>
  );
};

export const InstagramIcon = ({
  size, height, width, ...props
}) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg"
    height={height}
    width={width}
    fill="#007ebb"
    viewBox="0 0 2500 2500"
    {...props}
    >
      <defs>
        <radialGradient id="0" cx="332.14" cy="2511.81" r="3263.54" gradientUnits="userSpaceOnUse">
          <stop offset=".09" stop-color="#fa8f21" />
          <stop offset=".78" stop-color="#d82d7e" />
        </radialGradient>
        <radialGradient id="1" cx="1516.14" cy="2623.81" r="2572.12" gradientUnits="userSpaceOnUse">
          <stop offset=".64" stop-color="#8c3aaa" stop-opacity="0" />
          <stop offset="1" stop-color="#8c3aaa" />
          </radialGradient>
          </defs>
          <path d="M833.4,1250c0-230.11,186.49-416.7,416.6-416.7s416.7,186.59,416.7,416.7-186.59,416.7-416.7,416.7S833.4,1480.11,833.4,1250m-225.26,0c0,354.5,287.36,641.86,641.86,641.86S1891.86,1604.5,1891.86,1250,1604.5,608.14,1250,608.14,608.14,895.5,608.14,1250M1767.27,582.69a150,150,0,1,0,150.06-149.94h-0.06a150.07,150.07,0,0,0-150,149.94M745,2267.47c-121.87-5.55-188.11-25.85-232.13-43-58.36-22.72-100-49.78-143.78-93.5s-70.88-85.32-93.5-143.68c-17.16-44-37.46-110.26-43-232.13-6.06-131.76-7.27-171.34-7.27-505.15s1.31-373.28,7.27-505.15c5.55-121.87,26-188,43-232.13,22.72-58.36,49.78-100,93.5-143.78s85.32-70.88,143.78-93.5c44-17.16,110.26-37.46,232.13-43,131.76-6.06,171.34-7.27,505-7.27s373.28,1.31,505.15,7.27c121.87,5.55,188,26,232.13,43,58.36,22.62,100,49.78,143.78,93.5s70.78,85.42,93.5,143.78c17.16,44,37.46,110.26,43,232.13,6.06,131.87,7.27,171.34,7.27,505.15s-1.21,373.28-7.27,505.15c-5.55,121.87-25.95,188.11-43,232.13-22.72,58.36-49.78,100-93.5,143.68s-85.42,70.78-143.78,93.5c-44,17.16-110.26,37.46-232.13,43-131.76,6.06-171.34,7.27-505.15,7.27s-373.28-1.21-505-7.27M734.65,7.57c-133.07,6.06-224,27.16-303.41,58.06C349,97.54,279.38,140.35,209.81,209.81S97.54,349,65.63,431.24c-30.9,79.46-52,170.34-58.06,303.41C1.41,867.93,0,910.54,0,1250s1.41,382.07,7.57,515.35c6.06,133.08,27.16,223.95,58.06,303.41,31.91,82.19,74.62,152,144.18,221.43S349,2402.37,431.24,2434.37c79.56,30.9,170.34,52,303.41,58.06C868,2498.49,910.54,2500,1250,2500s382.07-1.41,515.35-7.57c133.08-6.06,223.95-27.16,303.41-58.06,82.19-32,151.86-74.72,221.43-144.18s112.18-139.24,144.18-221.43c30.9-79.46,52.1-170.34,58.06-303.41,6.06-133.38,7.47-175.89,7.47-515.35s-1.41-382.07-7.47-515.35c-6.06-133.08-27.16-224-58.06-303.41-32-82.19-74.72-151.86-144.18-221.43S2150.95,97.54,2068.86,65.63c-79.56-30.9-170.44-52.1-303.41-58.06C1632.17,1.51,1589.56,0,1250.1,0S868,1.41,734.65,7.57" fill="url(#0)" />
          <path d="M833.4,1250c0-230.11,186.49-416.7,416.6-416.7s416.7,186.59,416.7,416.7-186.59,416.7-416.7,416.7S833.4,1480.11,833.4,1250m-225.26,0c0,354.5,287.36,641.86,641.86,641.86S1891.86,1604.5,1891.86,1250,1604.5,608.14,1250,608.14,608.14,895.5,608.14,1250M1767.27,582.69a150,150,0,1,0,150.06-149.94h-0.06a150.07,150.07,0,0,0-150,149.94M745,2267.47c-121.87-5.55-188.11-25.85-232.13-43-58.36-22.72-100-49.78-143.78-93.5s-70.88-85.32-93.5-143.68c-17.16-44-37.46-110.26-43-232.13-6.06-131.76-7.27-171.34-7.27-505.15s1.31-373.28,7.27-505.15c5.55-121.87,26-188,43-232.13,22.72-58.36,49.78-100,93.5-143.78s85.32-70.88,143.78-93.5c44-17.16,110.26-37.46,232.13-43,131.76-6.06,171.34-7.27,505-7.27s373.28,1.31,505.15,7.27c121.87,5.55,188,26,232.13,43,58.36,22.62,100,49.78,143.78,93.5s70.78,85.42,93.5,143.78c17.16,44,37.46,110.26,43,232.13,6.06,131.87,7.27,171.34,7.27,505.15s-1.21,373.28-7.27,505.15c-5.55,121.87-25.95,188.11-43,232.13-22.72,58.36-49.78,100-93.5,143.68s-85.42,70.78-143.78,93.5c-44,17.16-110.26,37.46-232.13,43-131.76,6.06-171.34,7.27-505.15,7.27s-373.28-1.21-505-7.27M734.65,7.57c-133.07,6.06-224,27.16-303.41,58.06C349,97.54,279.38,140.35,209.81,209.81S97.54,349,65.63,431.24c-30.9,79.46-52,170.34-58.06,303.41C1.41,867.93,0,910.54,0,1250s1.41,382.07,7.57,515.35c6.06,133.08,27.16,223.95,58.06,303.41,31.91,82.19,74.62,152,144.18,221.43S349,2402.37,431.24,2434.37c79.56,30.9,170.34,52,303.41,58.06C868,2498.49,910.54,2500,1250,2500s382.07-1.41,515.35-7.57c133.08-6.06,223.95-27.16,303.41-58.06,82.19-32,151.86-74.72,221.43-144.18s112.18-139.24,144.18-221.43c30.9-79.46,52.1-170.34,58.06-303.41,6.06-133.38,7.47-175.89,7.47-515.35s-1.41-382.07-7.47-515.35c-6.06-133.08-27.16-224-58.06-303.41-32-82.19-74.72-151.86-144.18-221.43S2150.95,97.54,2068.86,65.63c-79.56-30.9-170.44-52.1-303.41-58.06C1632.17,1.51,1589.56,0,1250.1,0S868,1.41,734.65,7.57" fill="url(#1)" />
    </svg>
  );
};


export const DiscordIcon = ({ size = 24, width, height, ...props }) => (
  <svg
    height={size || height}
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M14.82 4.26a10.14 10.14 0 0 0-.53 1.1 14.66 14.66 0 0 0-4.58 0 10.14 10.14 0 0 0-.53-1.1 16 16 0 0 0-4.13 1.3 17.33 17.33 0 0 0-3 11.59 16.6 16.6 0 0 0 5.07 2.59A12.89 12.89 0 0 0 8.23 18a9.65 9.65 0 0 1-1.71-.83 3.39 3.39 0 0 0 .42-.33 11.66 11.66 0 0 0 10.12 0q.21.18.42.33a10.84 10.84 0 0 1-1.71.84 12.41 12.41 0 0 0 1.08 1.78 16.44 16.44 0 0 0 5.06-2.59 17.22 17.22 0 0 0-3-11.59 16.09 16.09 0 0 0-4.09-1.35zM8.68 14.81a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.93 1.93 0 0 1 1.8 2 1.93 1.93 0 0 1-1.8 2zm6.64 0a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.92 1.92 0 0 1 1.8 2 1.92 1.92 0 0 1-1.8 2z"
      fill="currentColor"
    />
  </svg>
);


export const GithubIcon = ({ size = 24, width, height, ...props }) => {
return (
  <svg
    height={size || height}
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      clipRule="evenodd"
      d="M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 0 1 2.496-.336 9.554 9.554 0 0 1 2.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z"
      fill="currentColor"
      fillRule="evenodd"
    />
  </svg>
);
};


export const ChevronDown = ({fill, size, height, width, ...props}) => {
  return (
    <svg
      fill="none"
      height={size || height || 24}
      viewBox="0 0 24 24"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="m19.92 8.95-6.52 6.52c-.77.77-2.03.77-2.8 0L4.08 8.95"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeMiterlimit={10}
        strokeWidth={1.5}
      />
    </svg>
  );
};

export const Lock = ({fill, size, height, width, ...props}) => {
  const color = fill;
  return (
    <svg
      height={size || height || 24}
      viewBox="0 0 24 24"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g transform="translate(3.5 2)">
        <path
          d="M9.121,6.653V4.5A4.561,4.561,0,0,0,0,4.484V6.653"
          fill="none"
          stroke={color}
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeMiterlimit="10"
          strokeWidth={1.5}
          transform="translate(3.85 0.75)"
        />
        <path
          d="M.5,0V2.221"
          fill="none"
          stroke={color}
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeMiterlimit="10"
          strokeWidth={1.5}
          transform="translate(7.91 12.156)"
        />
        <path
          d="M7.66,0C1.915,0,0,1.568,0,6.271s1.915,6.272,7.66,6.272,7.661-1.568,7.661-6.272S13.4,0,7.66,0Z"
          fill="none"
          stroke={color}
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeMiterlimit="10"
          strokeWidth={1.5}
          transform="translate(0.75 6.824)"
        />
      </g>
    </svg>
  );
};

export const Activity = ({fill, size, height, width, ...props}) => {
  return (
    <svg
      height={size || height || 24}
      viewBox="0 0 24 24"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g
        fill="none"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeMiterlimit={10}
        strokeWidth={1.5}
      >
        <path d="M6.918 14.854l2.993-3.889 3.414 2.68 2.929-3.78" />
        <path d="M19.668 2.35a1.922 1.922 0 11-1.922 1.922 1.921 1.921 0 011.922-1.922z" />
        <path d="M20.756 9.269a20.809 20.809 0 01.194 3.034c0 6.938-2.312 9.25-9.25 9.25s-9.25-2.312-9.25-9.25 2.313-9.25 9.25-9.25a20.931 20.931 0 012.983.187" />
      </g>
    </svg>
  );
};

export const Flash = ({
  fill = "currentColor",
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M6.09 13.28h3.09v7.2c0 1.68.91 2.02 2.02.76l7.57-8.6c.93-1.05.54-1.92-.87-1.92h-3.09v-7.2c0-1.68-.91-2.02-2.02-.76l-7.57 8.6c-.92 1.06-.53 1.92.87 1.92Z"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeMiterlimit={10}
        strokeWidth={1.5}
      />
    </svg>
  );
};

export const Server = ({
  fill = "currentColor",
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M19.32 10H4.69c-1.48 0-2.68-1.21-2.68-2.68V4.69c0-1.48 1.21-2.68 2.68-2.68h14.63C20.8 2.01 22 3.22 22 4.69v2.63C22 8.79 20.79 10 19.32 10ZM19.32 22H4.69c-1.48 0-2.68-1.21-2.68-2.68v-2.63c0-1.48 1.21-2.68 2.68-2.68h14.63c1.48 0 2.68 1.21 2.68 2.68v2.63c0 1.47-1.21 2.68-2.68 2.68ZM6 5v2M10 5v2M6 17v2M10 17v2M14 6h4M14 18h4"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={1.5}
      />
    </svg>
  );
};

export const TagUser = ({
  fill = "currentColor",
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M18 18.86h-.76c-.8 0-1.56.31-2.12.87l-1.71 1.69c-.78.77-2.05.77-2.83 0l-1.71-1.69c-.56-.56-1.33-.87-2.12-.87H6c-1.66 0-3-1.33-3-2.97V4.98c0-1.64 1.34-2.97 3-2.97h12c1.66 0 3 1.33 3 2.97v10.91c0 1.63-1.34 2.97-3 2.97Z"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeMiterlimit={10}
        strokeWidth={1.5}
      />
      <path
        d="M12 10a2.33 2.33 0 1 0 0-4.66A2.33 2.33 0 0 0 12 10ZM16 15.66c0-1.8-1.79-3.26-4-3.26s-4 1.46-4 3.26"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={1.5}
      />
    </svg>
  );
};

export const Scale = ({
  fill = "currentColor",
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M9 22h6c5 0 7-2 7-7V9c0-5-2-7-7-7H9C4 2 2 4 2 9v6c0 5 2 7 7 7ZM18 6 6 18"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={1.5}
      />
      <path
        d="M18 10V6h-4M6 14v4h4"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={1.5}
      />
    </svg>
  );
};


export const MoonFilledIcon = ({ size = 24, width, height, ...props }) => (
	<svg
		aria-hidden="true"
		focusable="false"
		height={size || height}
		role="presentation"
		viewBox="0 0 24 24"
		width={size || width}
		{...props}
	>
		<path
			d="M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z"
			fill="currentColor"
		/>
	</svg>
);

export const SunFilledIcon = ({ size = 24, width, height, ...props }) => (
	<svg
		aria-hidden="true"
		focusable="false"
		height={size || height}
		role="presentation"
		viewBox="0 0 24 24"
		width={size || width}
		{...props}
	>
		<g fill="currentColor">
			<path d="M19 12a7 7 0 11-7-7 7 7 0 017 7z" />
			<path d="M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z" />
		</g>
	</svg>
);

export const HeartFilledIcon = ({ size = 24, width, height, ...props }) => (
	<svg
		aria-hidden="true"
		focusable="false"
		height={size || height}
		role="presentation"
		viewBox="0 0 24 24"
		width={size || width}
		{...props}
	>
		<path
			d="M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z"
			fill="currentColor"
			strokeLinecap="round"
			strokeLinejoin="round"
			strokeWidth={1.5}
		/>
	</svg>
);

export const SearchIcon = (props) => (
	<svg
		aria-hidden="true"
		fill="none"
		focusable="false"
		height="1em"
		role="presentation"
		viewBox="0 0 24 24"
		width="1em"
		{...props}
	>
		<path
			d="M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z"
			stroke="currentColor"
			strokeLinecap="round"
			strokeLinejoin="round"
			strokeWidth="2"
		/>
		<path
			d="M22 22L20 20"
			stroke="currentColor"
			strokeLinecap="round"
			strokeLinejoin="round"
			strokeWidth="2"
		/>
	</svg>
);

export const CompanyDashLogo = () => (
  <svg
  width="40" 
  viewBox="0 0 40 20" 
  fill="none" 
  xmlns="http://www.w3.org/2000/svg" 
  class="text-pink"
  >
    <path 
    d="M23.3919 0H32.9188C36.7819 0 39.9136 3.13165 39.9136 6.99475V16.0805H36.0006V6.99475C36.0006 6.90167 35.9969 6.80925 35.9898 6.71766L26.4628 16.079C26.4949 16.08 26.5272 16.0805 26.5595 16.0805H36.0006V19.7762H26.5595C22.6964 19.7762 19.4788 16.6139 19.4788 12.7508V3.68923H23.3919V12.7508C23.3919 12.9253 23.4054 13.0977 23.4316 13.2668L33.1682 3.6995C33.0861 3.6927 33.003 3.68923 32.9188 3.68923H23.3919V0Z" 
    fill="currentColor"
    >
    </path>
    <path 
    d="M13.7688 19.0956L0 3.68759H5.53933L13.6231 12.7337V3.68759H17.7535V17.5746C17.7535 19.6705 15.1654 20.6584 13.7688 19.0956Z" 
    fill="currentColor"
    >
    </path>
  </svg>
);


export const CompanyLogiLogo = ({fill, size, height, width, ...props}) => {
  return (
    <svg
      fill={fill}
      height={size || height || 24}
      viewBox="0 0 40 20"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
    <path 
    d="M23.3919 0H32.9188C36.7819 0 39.9136 3.13165 39.9136 6.99475V16.0805H36.0006V6.99475C36.0006 6.90167 35.9969 6.80925 35.9898 6.71766L26.4628 16.079C26.4949 16.08 26.5272 16.0805 26.5595 16.0805H36.0006V19.7762H26.5595C22.6964 19.7762 19.4788 16.6139 19.4788 12.7508V3.68923H23.3919V12.7508C23.3919 12.9253 23.4054 13.0977 23.4316 13.2668L33.1682 3.6995C33.0861 3.6927 33.003 3.68923 32.9188 3.68923H23.3919V0Z" 
    >
    </path>
    <path 
    d="M13.7688 19.0956L0 3.68759H5.53933L13.6231 12.7337V3.68759H17.7535V17.5746C17.7535 19.6705 15.1654 20.6584 13.7688 19.0956Z" 
    >
    </path>
  </svg>
);
}

export const Lakearea = ({ size = 45, width, height, ...props }) => (
  <svg
		aria-hidden="true"
		focusable="false"
		height={size || height}
		role="presentation"
		viewBox="0 0 45 45"
    fill="none"
		width={size || width}
		{...props}
	>
<g clip-path="url(#clip0_2_1367)">
<path d="M37 23.501V25.501H9V15.501C9 15.251 9.094 15.01 9.26 14.827L9.35 14.74L15.704 9.29901C16.409 8.69501 17.429 8.66001 18.171 9.19301L18.307 9.29901L24.651 14.741C24.841 14.904 24.962 15.131 24.992 15.376L25 15.501V23.501M17.005 10.818L11 15.96V23.501H14V18.501C14 17.988 14.386 17.565 14.883 17.508L15 17.501H19C19.513 17.501 19.936 17.886 19.993 18.383L20 18.501V23.501H23V15.96L17.005 10.818ZM18 19.501H16V23.501H18V19.501Z" fill="#3C3C3C"/>
<path d="M31.011 25.037H33.038L33.026 8.5H30.998L31.011 25.037Z" fill="#3C3C3C"/>
<path d="M31.313 13.332C30.391 14.127 28.848 14.741 27.307 14.795L27.021 14.8V12.8C29.335 12.8 30.564 11.522 30.954 9.589L30.975 9.46C30.989 9.352 30.997 9.236 31.001 9.124L30.997 9.031L31.001 8.759L30.999 8.5" fill="#3C3C3C"/>
<path d="M32.65 13.273C33.629 14.117 35.305 14.799 36.983 14.799V12.799L36.748 12.796C34.586 12.712 33.426 11.456 33.05 9.589L33 9.369H32.227L32.65 13.273Z" fill="#3C3C3C"/>
<path d="M32.703 14.996L31 15.084L30.97 15.268C30.612 16.58 29.414 17.5 27.02 17.5V19.5L27.326 19.496C28.849 19.451 30.076 19.07 31.001 18.446L32.328 17.159L32.703 14.996Z" fill="#3C3C3C"/>
<path d="M33 18.446C33.986 19.112 35.316 19.5 36.981 19.5V17.5L36.72 17.496C34.499 17.431 33.367 16.533 33.022 15.27L32.123 15.386L31.289 17.293L33 18.446Z" fill="#3C3C3C"/>
<mask id="mask0_2_1367" maskUnits="userSpaceOnUse" x="-17" y="-18" width="80" height="80">
<path d="M63 -18H-17V62H63V-18Z" fill="#F2DDBB"/>
</mask>
<g mask="url(#mask0_2_1367)">
<path d="M4.959 27.875C6.078 27.876 7.16 28.286 7.975 29.051C8.365 29.416 8.876 29.635 9.419 29.679L9.625 29.687V31.687C8.506 31.687 7.424 31.276 6.608 30.511C6.17 30.1 5.578 29.875 4.959 29.875C4.339 29.875 3.747 30.1 3.309 30.511C2.493 31.276 1.411 31.687 0.292 31.687C-0.747 31.687 -1.755 31.333 -2.546 30.67L-2.725 30.511C-3.164 30.1 -3.755 29.875 -4.375 29.875C-4.995 29.875 -5.586 30.1 -6.024 30.511C-6.84 31.276 -7.923 31.687 -9.042 31.687C-10.161 31.687 -11.243 31.276 -12.059 30.511C-12.497 30.1 -13.088 29.875 -13.708 29.875C-14.328 29.875 -14.919 30.1 -15.358 30.511C-16.116 31.221 -17.103 31.627 -18.136 31.681L-18.375 31.687V29.687C-17.824 29.687 -17.296 29.509 -16.877 29.181L-16.725 29.051C-15.909 28.286 -14.827 27.876 -13.708 27.875C-12.589 27.876 -11.507 28.286 -10.691 29.051C-10.253 29.462 -9.662 29.687 -9.042 29.687C-8.422 29.687 -7.831 29.463 -7.392 29.051C-6.576 28.287 -5.494 27.876 -4.375 27.875C-3.256 27.876 -2.174 28.286 -1.358 29.051C-0.918999 29.462 -0.327999 29.687 0.292 29.687C0.912001 29.687 1.503 29.462 1.941 29.051C2.757 28.286 3.839 27.876 4.959 27.875Z" fill="#3C3C3C"/>
<path d="M32.084 27.875C33.203 27.876 34.285 28.286 35.1 29.051C35.49 29.416 36.001 29.635 36.544 29.679L36.75 29.687V31.687C35.631 31.687 34.549 31.276 33.733 30.511C33.295 30.1 32.703 29.875 32.084 29.875C31.464 29.875 30.872 30.1 30.434 30.511C29.618 31.276 28.536 31.687 27.417 31.687C26.378 31.687 25.37 31.333 24.579 30.67L24.4 30.511C23.961 30.1 23.37 29.875 22.75 29.875C22.13 29.875 21.539 30.1 21.101 30.511C20.285 31.276 19.202 31.687 18.083 31.687C16.964 31.687 15.882 31.276 15.066 30.511C14.628 30.1 14.037 29.875 13.417 29.875C12.797 29.875 12.206 30.1 11.767 30.511C11.009 31.221 10.022 31.627 8.989 31.681L8.75 31.687V29.687C9.301 29.687 9.829 29.509 10.248 29.181L10.4 29.051C11.216 28.286 12.298 27.876 13.417 27.875C14.536 27.876 15.618 28.286 16.434 29.051C16.872 29.462 17.463 29.687 18.083 29.687C18.703 29.687 19.294 29.463 19.733 29.051C20.549 28.287 21.631 27.876 22.75 27.875C23.869 27.876 24.951 28.286 25.767 29.051C26.206 29.462 26.797 29.687 27.417 29.687C28.037 29.687 28.628 29.462 29.066 29.051C29.882 28.286 30.964 27.876 32.084 27.875Z" fill="#3C3C3C"/>
<path d="M59.584 27.875C60.703 27.876 61.785 28.286 62.6 29.051C62.99 29.416 63.501 29.635 64.044 29.679L64.25 29.687V31.687C63.131 31.687 62.049 31.276 61.233 30.511C60.795 30.1 60.203 29.875 59.584 29.875C58.964 29.875 58.372 30.1 57.934 30.511C57.118 31.276 56.036 31.687 54.917 31.687C53.878 31.687 52.87 31.333 52.079 30.67L51.9 30.511C51.461 30.1 50.87 29.875 50.25 29.875C49.63 29.875 49.039 30.1 48.601 30.511C47.785 31.276 46.702 31.687 45.583 31.687C44.464 31.687 43.382 31.276 42.566 30.511C42.128 30.1 41.537 29.875 40.917 29.875C40.297 29.875 39.706 30.1 39.267 30.511C38.509 31.221 37.522 31.627 36.489 31.681L36.25 31.687V29.687C36.801 29.687 37.329 29.509 37.748 29.181L37.9 29.051C38.716 28.286 39.798 27.876 40.917 27.875C42.036 27.876 43.118 28.286 43.934 29.051C44.372 29.462 44.963 29.687 45.583 29.687C46.203 29.687 46.794 29.463 47.233 29.051C48.049 28.287 49.131 27.876 50.25 27.875C51.369 27.876 52.451 28.286 53.267 29.051C53.706 29.462 54.297 29.687 54.917 29.687C55.537 29.687 56.128 29.462 56.566 29.051C57.382 28.286 58.464 27.876 59.584 27.875Z" fill="#3C3C3C"/>
</g>
<mask id="mask1_2_1367" maskUnits="userSpaceOnUse" x="-17" y="-18" width="80" height="80">
<path d="M63 -18H-17V62H63V-18Z" fill="#F2DDBB"/>
</mask>
<g mask="url(#mask1_2_1367)">
<path d="M4.959 32.5C6.078 32.501 7.16 32.911 7.975 33.676C8.365 34.041 8.876 34.26 9.419 34.304L9.625 34.312V36.312C8.506 36.312 7.424 35.901 6.608 35.136C6.17 34.725 5.578 34.5 4.959 34.5C4.339 34.5 3.747 34.725 3.309 35.136C2.493 35.901 1.411 36.312 0.292 36.312C-0.747 36.312 -1.755 35.958 -2.546 35.295L-2.725 35.136C-3.164 34.725 -3.755 34.5 -4.375 34.5C-4.995 34.5 -5.586 34.725 -6.024 35.136C-6.84 35.901 -7.923 36.312 -9.042 36.312C-10.161 36.312 -11.243 35.901 -12.059 35.136C-12.497 34.725 -13.088 34.5 -13.708 34.5C-14.328 34.5 -14.919 34.725 -15.358 35.136C-16.116 35.846 -17.103 36.252 -18.136 36.306L-18.375 36.312V34.312C-17.824 34.312 -17.296 34.134 -16.877 33.806L-16.725 33.676C-15.909 32.911 -14.827 32.501 -13.708 32.5C-12.589 32.501 -11.507 32.911 -10.691 33.676C-10.253 34.087 -9.662 34.312 -9.042 34.312C-8.422 34.312 -7.831 34.088 -7.392 33.676C-6.576 32.912 -5.494 32.501 -4.375 32.5C-3.256 32.501 -2.174 32.911 -1.358 33.676C-0.918999 34.087 -0.327999 34.312 0.292 34.312C0.912001 34.312 1.503 34.087 1.941 33.676C2.757 32.911 3.839 32.501 4.959 32.5Z" fill="#3C3C3C"/>
<path d="M32.084 32.5C33.203 32.501 34.285 32.911 35.1 33.676C35.49 34.041 36.001 34.26 36.544 34.304L36.75 34.312V36.312C35.631 36.312 34.549 35.901 33.733 35.136C33.295 34.725 32.703 34.5 32.084 34.5C31.464 34.5 30.872 34.725 30.434 35.136C29.618 35.901 28.536 36.312 27.417 36.312C26.378 36.312 25.37 35.958 24.579 35.295L24.4 35.136C23.961 34.725 23.37 34.5 22.75 34.5C22.13 34.5 21.539 34.725 21.101 35.136C20.285 35.901 19.202 36.312 18.083 36.312C16.964 36.312 15.882 35.901 15.066 35.136C14.628 34.725 14.037 34.5 13.417 34.5C12.797 34.5 12.206 34.725 11.767 35.136C11.009 35.846 10.022 36.252 8.989 36.306L8.75 36.312V34.312C9.301 34.312 9.829 34.134 10.248 33.806L10.4 33.676C11.216 32.911 12.298 32.501 13.417 32.5C14.536 32.501 15.618 32.911 16.434 33.676C16.872 34.087 17.463 34.312 18.083 34.312C18.703 34.312 19.294 34.088 19.733 33.676C20.549 32.912 21.631 32.501 22.75 32.5C23.869 32.501 24.951 32.911 25.767 33.676C26.206 34.087 26.797 34.312 27.417 34.312C28.037 34.312 28.628 34.087 29.066 33.676C29.882 32.911 30.964 32.501 32.084 32.5Z" fill="#3C3C3C"/>
<path d="M59.584 32.5C60.703 32.501 61.785 32.911 62.6 33.676C62.99 34.041 63.501 34.26 64.044 34.304L64.25 34.312V36.312C63.131 36.312 62.049 35.901 61.233 35.136C60.795 34.725 60.203 34.5 59.584 34.5C58.964 34.5 58.372 34.725 57.934 35.136C57.118 35.901 56.036 36.312 54.917 36.312C53.878 36.312 52.87 35.958 52.079 35.295L51.9 35.136C51.461 34.725 50.87 34.5 50.25 34.5C49.63 34.5 49.039 34.725 48.601 35.136C47.785 35.901 46.702 36.312 45.583 36.312C44.464 36.312 43.382 35.901 42.566 35.136C42.128 34.725 41.537 34.5 40.917 34.5C40.297 34.5 39.706 34.725 39.267 35.136C38.509 35.846 37.522 36.252 36.489 36.306L36.25 36.312V34.312C36.801 34.312 37.329 34.134 37.748 33.806L37.9 33.676C38.716 32.911 39.798 32.501 40.917 32.5C42.036 32.501 43.118 32.911 43.934 33.676C44.372 34.087 44.963 34.312 45.583 34.312C46.203 34.312 46.794 34.088 47.233 33.676C48.049 32.912 49.131 32.501 50.25 32.5C51.369 32.501 52.451 32.911 53.267 33.676C53.706 34.087 54.297 34.312 54.917 34.312C55.537 34.312 56.128 34.087 56.566 33.676C57.382 32.911 58.464 32.501 59.584 32.5Z" fill="#3C3C3C"/>
</g>
</g>
<defs>
<clipPath id="clip0_2_1367">
<rect width="45" height="45" fill="white"/>
</clipPath>
</defs>
</svg>
);

export const PlusIcon = ({size = 24, width, height, ...props}) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <g
      fill="none"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    >
      <path d="M6 12h12" />
      <path d="M12 18V6" />
    </g>
  </svg>
);

export const VerticalDotsIcon = ({size = 24, width, height, ...props}) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
      fill="currentColor"
    />
  </svg>
);

export const ChevronDownIcon = ({strokeWidth = 1.5, ...otherProps}) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 24 24"
    width="1em"
    {...otherProps}
  >
    <path
      d="m19.92 8.95-6.52 6.52c-.77.77-2.03.77-2.8 0L4.08 8.95"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeMiterlimit={10}
      strokeWidth={strokeWidth}
    />
  </svg>
);

export const EditIcon = (props) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 20 20"
    width="1em"
    {...props}
  >
    <path
      d="M11.05 3.00002L4.20835 10.2417C3.95002 10.5167 3.70002 11.0584 3.65002 11.4334L3.34169 14.1334C3.23335 15.1084 3.93335 15.775 4.90002 15.6084L7.58335 15.15C7.95835 15.0834 8.48335 14.8084 8.74168 14.525L15.5834 7.28335C16.7667 6.03335 17.3 4.60835 15.4583 2.86668C13.625 1.14168 12.2334 1.75002 11.05 3.00002Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeMiterlimit={10}
      strokeWidth={1.5}
    />
    <path
      d="M9.90833 4.20831C10.2667 6.50831 12.1333 8.26665 14.45 8.49998"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeMiterlimit={10}
      strokeWidth={1.5}
    />
    <path
      d="M2.5 18.3333H17.5"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeMiterlimit={10}
      strokeWidth={1.5}
    />
  </svg>
);

export const DeleteIcon = (props) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 20 20"
    width="1em"
    {...props}
  >
    <path
      d="M17.5 4.98332C14.725 4.70832 11.9333 4.56665 9.15 4.56665C7.5 4.56665 5.85 4.64998 4.2 4.81665L2.5 4.98332"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M7.08331 4.14169L7.26665 3.05002C7.39998 2.25835 7.49998 1.66669 8.90831 1.66669H11.0916C12.5 1.66669 12.6083 2.29169 12.7333 3.05835L12.9166 4.14169"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M15.7084 7.61664L15.1667 16.0083C15.075 17.3166 15 18.3333 12.675 18.3333H7.32502C5.00002 18.3333 4.92502 17.3166 4.83335 16.0083L4.29169 7.61664"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M8.60834 13.75H11.3833"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M7.91669 10.4167H12.0834"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);


export const EyeIcon = (props) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 20 20"
    width="1em"
    {...props}
  >
    <path
      d="M12.9833 10C12.9833 11.65 11.65 12.9833 10 12.9833C8.35 12.9833 7.01666 11.65 7.01666 10C7.01666 8.35 8.35 7.01666 10 7.01666C11.65 7.01666 12.9833 8.35 12.9833 10Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M9.99999 16.8916C12.9417 16.8916 15.6833 15.1583 17.5917 12.1583C18.3417 10.9833 18.3417 9.00831 17.5917 7.83331C15.6833 4.83331 12.9417 3.09998 9.99999 3.09998C7.05833 3.09998 4.31666 4.83331 2.40833 7.83331C1.65833 9.00831 1.65833 10.9833 2.40833 12.1583C4.31666 15.1583 7.05833 16.8916 9.99999 16.8916Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);

export const EyeFilledIcon = (props) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 24 24"
    width="1em"
    {...props}
  >
    <path
      d="M21.25 9.14969C18.94 5.51969 15.56 3.42969 12 3.42969C10.22 3.42969 8.49 3.94969 6.91 4.91969C5.33 5.89969 3.91 7.32969 2.75 9.14969C1.75 10.7197 1.75 13.2697 2.75 14.8397C5.06 18.4797 8.44 20.5597 12 20.5597C13.78 20.5597 15.51 20.0397 17.09 19.0697C18.67 18.0897 20.09 16.6597 21.25 14.8397C22.25 13.2797 22.25 10.7197 21.25 9.14969ZM12 16.0397C9.76 16.0397 7.96 14.2297 7.96 11.9997C7.96 9.76969 9.76 7.95969 12 7.95969C14.24 7.95969 16.04 9.76969 16.04 11.9997C16.04 14.2297 14.24 16.0397 12 16.0397Z"
      fill="currentColor"
    />
    <path
      d="M11.9984 9.14062C10.4284 9.14062 9.14844 10.4206 9.14844 12.0006C9.14844 13.5706 10.4284 14.8506 11.9984 14.8506C13.5684 14.8506 14.8584 13.5706 14.8584 12.0006C14.8584 10.4306 13.5684 9.14062 11.9984 9.14062Z"
      fill="currentColor"
    />
  </svg>
);


export const EyeSlashFilledIcon = (props) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 24 24"
    width="1em"
    {...props}
  >
    <path
      d="M21.2714 9.17834C20.9814 8.71834 20.6714 8.28834 20.3514 7.88834C19.9814 7.41834 19.2814 7.37834 18.8614 7.79834L15.8614 10.7983C16.0814 11.4583 16.1214 12.2183 15.9214 13.0083C15.5714 14.4183 14.4314 15.5583 13.0214 15.9083C12.2314 16.1083 11.4714 16.0683 10.8114 15.8483C10.8114 15.8483 9.38141 17.2783 8.35141 18.3083C7.85141 18.8083 8.01141 19.6883 8.68141 19.9483C9.75141 20.3583 10.8614 20.5683 12.0014 20.5683C13.7814 20.5683 15.5114 20.0483 17.0914 19.0783C18.7014 18.0783 20.1514 16.6083 21.3214 14.7383C22.2714 13.2283 22.2214 10.6883 21.2714 9.17834Z"
      fill="currentColor"
    />
    <path
      d="M14.0206 9.98062L9.98062 14.0206C9.47062 13.5006 9.14062 12.7806 9.14062 12.0006C9.14062 10.4306 10.4206 9.14062 12.0006 9.14062C12.7806 9.14062 13.5006 9.47062 14.0206 9.98062Z"
      fill="currentColor"
    />
    <path
      d="M18.25 5.74969L14.86 9.13969C14.13 8.39969 13.12 7.95969 12 7.95969C9.76 7.95969 7.96 9.76969 7.96 11.9997C7.96 13.1197 8.41 14.1297 9.14 14.8597L5.76 18.2497H5.75C4.64 17.3497 3.62 16.1997 2.75 14.8397C1.75 13.2697 1.75 10.7197 2.75 9.14969C3.91 7.32969 5.33 5.89969 6.91 4.91969C8.49 3.95969 10.22 3.42969 12 3.42969C14.23 3.42969 16.39 4.24969 18.25 5.74969Z"
      fill="currentColor"
    />
    <path
      d="M14.8581 11.9981C14.8581 13.5681 13.5781 14.8581 11.9981 14.8581C11.9381 14.8581 11.8881 14.8581 11.8281 14.8381L14.8381 11.8281C14.8581 11.8881 14.8581 11.9381 14.8581 11.9981Z"
      fill="currentColor"
    />
    <path
      d="M21.7689 2.22891C21.4689 1.92891 20.9789 1.92891 20.6789 2.22891L2.22891 20.6889C1.92891 20.9889 1.92891 21.4789 2.22891 21.7789C2.37891 21.9189 2.56891 21.9989 2.76891 21.9989C2.96891 21.9989 3.15891 21.9189 3.30891 21.7689L21.7689 3.30891C22.0789 3.00891 22.0789 2.52891 21.7689 2.22891Z"
      fill="currentColor"
    />
  </svg>
);

export const NotificationIcon = ({size, height, width, ...props}) => {
  return (
    <svg
      fill="none"
      height={size || height || 24}
      viewBox="0 0 24 24"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        clipRule="evenodd"
        d="M18.707 8.796c0 1.256.332 1.997 1.063 2.85.553.628.73 1.435.73 2.31 0 .874-.287 1.704-.863 2.378a4.537 4.537 0 01-2.9 1.413c-1.571.134-3.143.247-4.736.247-1.595 0-3.166-.068-4.737-.247a4.532 4.532 0 01-2.9-1.413 3.616 3.616 0 01-.864-2.378c0-.875.178-1.682.73-2.31.754-.854 1.064-1.594 1.064-2.85V8.37c0-1.682.42-2.781 1.283-3.858C7.861 2.942 9.919 2 11.956 2h.09c2.08 0 4.204.987 5.466 2.625.82 1.054 1.195 2.108 1.195 3.745v.426zM9.074 20.061c0-.504.462-.734.89-.833.5-.106 3.545-.106 4.045 0 .428.099.89.33.89.833-.025.48-.306.904-.695 1.174a3.635 3.635 0 01-1.713.731 3.795 3.795 0 01-1.008 0 3.618 3.618 0 01-1.714-.732c-.39-.269-.67-.694-.695-1.173z"
        fill='currentColor'
        fillRule="evenodd"
      />
    </svg>
  );
};


export const CalendarPlus = ({size, height, width, fill, ...props}) => {
  return (
<svg
      fill="currentColor"
      height={size || height || 24}
      viewBox="0 0 256 256"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    > 
  <path d="M208,34H182V24a6,6,0,0,0-12,0V34H86V24a6,6,0,0,0-12,0V34H48A14,14,0,0,0,34,48V208a14,14,0,0,0,14,14H208a14,14,0,0,0,14-14V48A14,14,0,0,0,208,34ZM48,46H74V56a6,6,0,0,0,12,0V46h84V56a6,6,0,0,0,12,0V46h26a2,2,0,0,1,2,2V82H46V48A2,2,0,0,1,48,46ZM208,210H48a2,2,0,0,1-2-2V94H210V208A2,2,0,0,1,208,210Zm-50-58a6,6,0,0,1-6,6H134v18a6,6,0,0,1-12,0V158H104a6,6,0,0,1,0-12h18V128a6,6,0,0,1,12,0v18h18A6,6,0,0,1,158,152Z">
  </path>
  </svg>
);
};

export const ClockCounterClockwise = ({size, height, width, fill, ...props}) => {
  return (
<svg
      fill="currentColor"
      height={size || height || 24}
      viewBox="0 0 256 256"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    > 
    <path d="M134,80v44.6l37.09,22.25a6,6,0,0,1-6.18,10.3l-40-24A6,6,0,0,1,122,128V80a6,6,0,0,1,12,0Zm-6-46A93.4,93.4,0,0,0,61.51,61.56c-8.58,8.68-16,17-23.51,25.8V64a6,6,0,0,0-12,0v40a6,6,0,0,0,6,6H72a6,6,0,0,0,0-12H44.73C52.86,88.29,60.79,79.35,70,70a82,82,0,1,1,1.7,117.62,6,6,0,1,0-8.24,8.72A94,94,0,1,0,128,34Z">
    </path>
    </svg>
);
};

export const CurrencyInr = ({size, height, width, fill, ...props}) => {
  return (
<svg
      fill="currentColor"
      height={size || height || 24}
      viewBox="0 0 256 256"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    > 
      <path d="M206,80a6,6,0,0,1-6,6H165.69a59.36,59.36,0,0,1,.31,6,58.07,58.07,0,0,1-58,58H87.52L164,219.56a6,6,0,0,1-8.08,8.88l-88-80A6,6,0,0,1,72,138h36a46.06,46.06,0,0,0,46-46,47.61,47.61,0,0,0-.4-6H72a6,6,0,0,1,0-12h78.33A46.08,46.08,0,0,0,108,46H72a6,6,0,0,1,0-12H200a6,6,0,0,1,0,12H143.27a58.25,58.25,0,0,1,19.86,28H200A6,6,0,0,1,206,80Z">
      </path>
      </svg>
);
};

export const SealQuestion = ({size, height, width, fill, ...props}) => {
  return (
<svg
      fill="currentColor"
      height={size || height || 24}
      viewBox="0 0 256 256"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    > 
        <path d="M224.42,104.2c-3.9-4.07-7.93-8.27-9.55-12.18-1.5-3.63-1.58-9-1.67-14.68-.14-9.38-.3-20-7.42-27.12S188,42.94,178.66,42.8c-5.68-.09-11-.17-14.68-1.67-3.91-1.62-8.11-5.65-12.18-9.55C145.16,25.22,137.64,18,128,18s-17.16,7.22-23.8,13.58c-4.07,3.9-8.27,7.93-12.18,9.55-3.63,1.5-9,1.58-14.68,1.67-9.38.14-20,.3-27.12,7.42S42.94,68,42.8,77.34c-.09,5.68-.17,11-1.67,14.68-1.62,3.91-5.65,8.11-9.55,12.18C25.22,110.84,18,118.36,18,128s7.22,17.16,13.58,23.8c3.9,4.07,7.93,8.27,9.55,12.18,1.5,3.63,1.58,9,1.67,14.68.14,9.38.3,20,7.42,27.12S68,213.06,77.34,213.2c5.68.09,11,.17,14.68,1.67,3.91,1.62,8.11,5.65,12.18,9.55C110.84,230.78,118.36,238,128,238s17.16-7.22,23.8-13.58c4.07-3.9,8.27-7.93,12.18-9.55,3.63-1.5,9-1.58,14.68-1.67,9.38-.14,20-.3,27.12-7.42s7.28-17.74,7.42-27.12c.09-5.68.17-11,1.67-14.68,1.62-3.91,5.65-8.11,9.55-12.18C230.78,145.16,238,137.64,238,128S230.78,110.84,224.42,104.2Zm-8.66,39.3c-4.67,4.86-9.5,9.9-12,15.9-2.38,5.74-2.48,12.52-2.58,19.08-.11,7.44-.23,15.14-3.9,18.82s-11.38,3.79-18.82,3.9c-6.56.1-13.34.2-19.08,2.58-6,2.48-11,7.31-15.91,12-5.25,5-10.68,10.24-15.49,10.24s-10.24-5.21-15.5-10.24c-4.86-4.67-9.9-9.5-15.9-12-5.74-2.38-12.52-2.48-19.08-2.58-7.44-.11-15.14-.23-18.82-3.9s-3.79-11.38-3.9-18.82c-.1-6.56-.2-13.34-2.58-19.08-2.48-6-7.31-11-12-15.91C35.21,138.24,30,132.81,30,128s5.21-10.24,10.24-15.5c4.67-4.86,9.5-9.9,12-15.9,2.38-5.74,2.48-12.52,2.58-19.08.11-7.44.23-15.14,3.9-18.82s11.38-3.79,18.82-3.9c6.56-.1,13.34-.2,19.08-2.58,6-2.48,11-7.31,15.91-12C117.76,35.21,123.19,30,128,30s10.24,5.21,15.5,10.24c4.86,4.67,9.9,9.5,15.9,12,5.74,2.38,12.52,2.48,19.08,2.58,7.44.11,15.14.23,18.82,3.9s3.79,11.38,3.9,18.82c.1,6.56.2,13.34,2.58,19.08,2.48,6,7.31,11,12,15.91,5,5.25,10.24,10.68,10.24,15.49S220.79,138.24,215.76,143.5ZM138,180a10,10,0,1,1-10-10A10,10,0,0,1,138,180Zm28-72c0,16.92-13.89,31-32,33.58V144a6,6,0,0,1-12,0v-8a6,6,0,0,1,6-6c14.34,0,26-9.87,26-22s-11.66-22-26-22-26,9.87-26,22v4a6,6,0,0,1-12,0v-4c0-18.75,17-34,38-34S166,89.25,166,108Z">
        </path>
        </svg>
);
};


export const CodesandboxLogo = ({size, height, width, fill, ...props}) => {
  return (
<svg
      fill="currentColor"
      height={size || height || 24}
      viewBox="0 0 256 256"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    > 
          <path d="M222.72,67.91l-88-48.18a13.9,13.9,0,0,0-13.44,0l-88,48.17A14,14,0,0,0,26,80.18v95.64a14,14,0,0,0,7.28,12.28l88,48.17a13.92,13.92,0,0,0,13.44,0l88-48.17A14,14,0,0,0,230,175.82V80.18A14,14,0,0,0,222.72,67.91ZM128,121.16,44.49,75.44,83.14,54.29l42,23a6,6,0,0,0,5.76,0l42-23,38.65,21.15Zm-1-90.91a2,2,0,0,1,1.92,0l31.4,17.2L128,65.16,95.63,47.45ZM38,175.82v-40l36,19.7v41.16L39,177.57A2,2,0,0,1,38,175.82Zm48,27.46V152a6,6,0,0,0-3.12-5.26L38,122.17V85.57l84,46V223ZM134,223V131.56l84-46v36.6l-44.88,24.57A6,6,0,0,0,170,152v51.28Zm83-45.42-35,19.14V155.55l36-19.7v40A2,2,0,0,1,217,177.57Z">
          </path>
          </svg>
);
};


export const ListChecks = ({size, height, width, fill, ...props}) => {
  return (
<svg
      fill="currentColor"
      height={size || height || 24}
      viewBox="0 0 256 256"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    > 
            <path d="M222,128a6,6,0,0,1-6,6H128a6,6,0,0,1,0-12h88A6,6,0,0,1,222,128ZM128,70h88a6,6,0,0,0,0-12H128a6,6,0,0,0,0,12Zm88,116H128a6,6,0,0,0,0,12h88a6,6,0,0,0,0-12ZM83.76,43.76,56,71.51,44.24,59.76a6,6,0,0,0-8.48,8.48l16,16a6,6,0,0,0,8.48,0l32-32a6,6,0,0,0-8.48-8.48Zm0,64L56,135.51,44.24,123.76a6,6,0,1,0-8.48,8.48l16,16a6,6,0,0,0,8.48,0l32-32a6,6,0,0,0-8.48-8.48Zm0,64L56,199.51,44.24,187.76a6,6,0,0,0-8.48,8.48l16,16a6,6,0,0,0,8.48,0l32-32a6,6,0,0,0-8.48-8.48Z">
            </path>
            </svg>
);
};

export const ArrowsClockwise = ({size, height, width, fill, ...props}) => {
  return (
<svg
      fill="currentColor"
      height={size || height || 24}
      viewBox="0 0 256 256"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    > 
      <path d="M196.24,187.76a6,6,0,0,1,0,8.48C195.19,197.29,170,222,128,222c-39.66,0-67.59-25.75-82-43.26V208a6,6,0,0,1-12,0V160a6,6,0,0,1,6-6H88a6,6,0,0,1,0,12H51.35c11.41,15.11,38.23,44,76.65,44,37.09,0,59.54-22,59.76-22.24A6,6,0,0,1,196.24,187.76ZM216,42a6,6,0,0,0-6,6V77.26C195.59,59.75,167.66,34,128,34,86,34,60.81,58.71,59.76,59.76a6,6,0,0,0,8.48,8.48C68.46,68,90.91,46,128,46c38.42,0,65.24,28.89,76.65,44H168a6,6,0,0,0,0,12h48a6,6,0,0,0,6-6V48A6,6,0,0,0,216,42Z">
      </path>
      </svg>
);
};

export const IndianFlag = ({size, height, width, fill, ...props}) => {
  return (
    <svg
      fill="currentColor"
      height={size || height || 24}
      viewBox="0 0 36 36"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path fill="#138808" d="M0 27a4 4 0 0 0 4 4h28a4 4 0 0 0 4-4v-4H0v4z">
      </path>
      <path fill="#EEE" d="M0 13h36v10H0z">
      </path>
      <path fill="#F93" d="M36 13V9a4 4 0 0 0-4-4H4a4 4 0 0 0-4 4v4h36z">
      </path>
      <circle fill="navy" cx="18" cy="18" r="4">
      </circle>
      <circle fill="#EEE" cx="18" cy="18" r="3">
      </circle>
      <path fill="#6666B3" d="M18 15l.146 2.264l1.001-2.035l-.73 2.147l1.704-1.498l-1.497 1.705l2.147-.731l-2.035 1.002L21 18l-2.264.146l2.035 1.001l-2.147-.73l1.497 1.704l-1.704-1.497l.73 2.147l-1.001-2.035L18 21l-.146-2.264l-1.002 2.035l.731-2.147l-1.705 1.497l1.498-1.704l-2.147.73l2.035-1.001L15 18l2.264-.146l-2.035-1.002l2.147.731l-1.498-1.705l1.705 1.498l-.731-2.147l1.002 2.035z">
      </path>
      <circle fill="navy" cx="18" cy="18" r="1">
      </circle>
    </svg>
  );
};